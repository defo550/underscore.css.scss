/* ----------------------------------------------------------------------------
   Text helpers (compiled from scss/text.scss)
   ------------------------------------------------------------------------- */

/**
 * Adjust the textual structure of a element.
 *
 * Textual helpers typically address a 'Typographical Property':
 *  `color`
 *  `direction`
 *  `font`
 *  `font-family`
 *  `font-size`
 *  `font-style`
 *  `font-variant`
 *  `font-weight`
 *  `letter-spacing`
 *  `text-align`
 *  `text-decoration`
 *  `text-indent`
 *  `text-shadow`
 *  `text-transform`
 *  `vertical-align`
 *  `white-space`
 *  `word-spacing`
 *
 * @require functions/_rem.scss
 * @require mixins/_color-variant.scss
 * @require mixins/_text-ellipsis.scss
 *
 */

/**
 * Adjust text horizontally.
 */

._txtLeft    { text-align: left !important; }
._txtCenter  { text-align: center !important; }
._txtRight   { text-align: right !important; }
._txtJustify { text-align: justify !important; }

/**
 * Ajust text vertically.
 */

._txtTop      { vertical-align: top !important; }
._txtMiddle   { vertical-align: middle !important; }
._txtBottom   { vertical-align: bottom !important; }
._txtBaseline { vertical-align: baseline !important; }

/**
 * Text Ellipsis
 *
 * Add an ellipsis '...' to text that is prevented from wrapping onto
 * multiple lines.
 */

._txtEllipsis {
  @include _text-ellipsis;
}

/**
 * Text importance.
 * <selector>: <color>
 *
 * Append key/value pair to $txt-colors to have _color-variant mixin produce
 * the declaration blocks.
 */

@include _color-variant( $txt-colors, color );

/**
 * Word breaking
 *
 * Unbreakable words may be broken and wrap to next line.
 */

._txtBreak {
  word-wrap: break-word !important;
}

/**
 * Inherit parents text color.
 */

._txtInheritColor {
  color: inherit !important;
}

/**
 * Sizing treatments.
 *
 * Limit the amount of font-size delcarations.
 *
 * @resource:
 * github.com/stubbornella/csslint/wiki/Don't-use-too-many-font-size-declarations
 *
 * 1. pixel fallback for IE.
 */

._txtSmall  {
  font-size: $txt-small !important; /* 1 */
  font-size: _rem( $txt-small ) !important;
}

._txtMedium {
  font-size: $txt-medium !important; /* 1 */
  font-size: _rem( $txt-medium ) !important;
}

._txtLarge {
  font-size: $txt-large !important; /* 1 */
  font-size: _rem( $txt-large ) !important;
}

/**
 * Transform treamtemnt.
 */

._txtJustify    { text-transform: justify !important; }
._txtUpcase     { text-transform: uppercase !important; }
._txtLowcase    { text-transform: lowercase !important; }
._txtCapitalize { text-transform: capitalize !important; }

/**
 * Hide text visually but leave available for screenreaders: h5bp.com/v.
 * @deprecated Has been moved to `./_layout.scss`.
 */

._txtVisuallyHidden {
  clip: rect(1px, 1px, 1px, 1px) !important;
  overflow: hidden !important;
  position: absolute !important;

  border: 0 !important;
  height: 1px !important;
  padding: 0 !important;
  width: 1px !important;
}

/**
 * Collapse whitespace and suppress line breaks.
 */

._txtNoWrap {
  white-space: nowrap !important;
}
